<?xml version="1.0" encoding="UTF-8"?>
<configuration>


    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <!-- 日志保存的文件夹 -->
    <property name="LOG_HOME" value="logs"/>

    <!-- 输出到控制台 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 输出的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}: %msg%n</pattern>
        </encoder>
    </appender>



    <!-- 这个appender是每天生成一个日志文件，并且只保留7天 -->
    <!-- 滚动输出到文件，达到一定条件时，会将日志记录到其他文件 -->
    <appender name="timeFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 滚动策略。具体策略由class指定。 -->
        <!-- TimeBasedRollingPolicy是最常用的滚动策略，根据时间滚动，当达到一定时间时，自动重新开辟一个日志文件 -->
        <!-- FixedWindowRollingPolicy根据固定窗口算法重命名文件的滚动策略 -->
        <!-- triggeringPolicy根据当前活动文件大小来决定是否滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 由于表达式中最小单位为天，所以每天生成一个日志文件，且以此命名 -->
            <fileNamePattern>${LOG_HOME}/logFile_%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 保留归档文件的最大数量。 -->
            <!-- 本例中由于使用了时间作为滚动策略，且fileNamePattern中最小单位为天，所以归档文件保存7天，超过7天将被删除 -->
            <MaxHistory>7</MaxHistory>
        </rollingPolicy>
        <!-- 输出的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger: %msg%n</pattern>
        </encoder>
    </appender>



    <!-- 注意：
        loger和logger都是可以用的，两者有区别。loger会将加载logback的信息打印输出，最后会执行root指定级别的日志。
        logger不会输出加载logback的信息，只会输出程序中书写的日志记录。经常使用的是logger。
    -->
    <!--
    <loger name="ws.log.logback.LogbackTest" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="STDOUT"/>
    </loger>
    -->



    <!-- root 默认日志配置 ， 注意这里的级别哈！小心生产环境用DEBUG，压爆你的磁盘！-->
    <root level="INFO">
        <appender-ref ref="stdout"/>
    </root>

    <!-- 修改其他包的日志输出级别 -->
    <logger name="com" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="stdout"/>
        <appender-ref ref="timeFile"/>
    </logger>


</configuration>